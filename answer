## **Activity 1: Understanding Caching Concepts**

### **Theory Check**
Before diving into implementation, answer these questions:

1. **What is caching and why is it important?**
   - Write a 2-sentence explanation
   Caching is the process of storing frequently accessed data in a temporary storage (cache) so it can be retrieved quickly instead of recalculating or fetching it from a slower source. It improves performance, reduces latency, and lowers the load on underlying systems.

   - List 3 benefits of caching
   It improves performance 
   reduces latency
   lowers the load on underlying systems.


2. **What are the different types of caching?**
   - Database query caching
   - Template caching
   - View caching
   - Full-page caching

3. **Cache Invalidation Challenge**
   - What problems can arise with stale cached data?
 Outdated information – users may see old or incorrect data instead of the most recent updates.
 Inconsistency – different users may see different versions of the same data, leading to confusion.
 Data integrity issues – critical systems (like financial transactions) may operate on wrong values, causing errors or losses.
 Debugging complexity – developers may struggle to trace issues when the cache serves old results instead of the updated source.


   - When should cache be cleared?
When underlying data changes
When cache entries expire (TTL – time-to-live)
If corrupted cache